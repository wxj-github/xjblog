import{_ as p,r as o,o as l,c as i,a as n,b as s,d as a,e}from"./app-7863bad7.js";const c="/xjblog/assets/image-20220207205544577-822ccc66.png",u="/xjblog/assets/image-20220208214934121-ab5c03e4.png",r="/xjblog/assets/image-20220208214952577-2e700f59.png",d={},k=e('<h2 id="项目目录结构" tabindex="-1"><a class="header-anchor" href="#项目目录结构" aria-hidden="true">#</a> 项目目录结构</h2><p><img src="'+c+`" alt="image-20220207205544577"></p><p>components文件夹为后续创建的，用于存放复用的组件。（在此文件夹下，目录名和文件名相同时，在页面中可以直接引用，否则需要需要导入且在script里挂载components，尽量使用my-test的格式来命名，暂且不知道图中的引用方式是否会有后续的问题）</p><p>pages文件夹为页面文件夹。</p><p>static文件夹为静态资源文件夹。</p><p>unpackage为打包后的文件。</p><p>App.vue主要用于监听整个应用的启动、退出、隐藏。以及引用公共样式。</p><p>main.js初始化的入口文件。</p><p>pages.json页面配置文件。</p><p>cloudfunctions 云函数目录，说明服务端用了unicloud编写。</p><p>hybrid 存放本地网页的目录。</p><p>platforms 存放各平台专用页面的目录。</p><p>注意：编译到任意平台时，static目录的文件都会被打包进去，非static目录的文件被引用才回打包进去。</p><p>static下的js文件不会被编译，如果里面有es6的代码，没有转换直接运行在手机设备上则会报错。</p><p>css、less、sass等资源文件也同样不要放在static目录下，建议都放在common中。</p><h2 id="引入静态文件" tabindex="-1"><a class="header-anchor" href="#引入静态文件" aria-hidden="true">#</a> 引入静态文件</h2><p>@/ 代表根目录下（推荐使用）</p><p>或者直接 / 就代表根路径。（支付宝小程序不可使用相对路经）</p><p>js文件不支持 / 开头的引入方式</p><p>有些小程序端css文件不允许url引用本地静态资源</p><p>引入字体图标文件时，用~@开头，如~@/static/icon/iconfont.ttf</p><h2 id="引入iconfont" tabindex="-1"><a class="header-anchor" href="#引入iconfont" aria-hidden="true">#</a> 引入iconfont</h2><p>如果是unicode方式使用，则依赖ttf文件。</p><p>如果是类名方式使用，则依赖css和ttf文件。</p><h3 id="vue文件引用字体图标" tabindex="-1"><a class="header-anchor" href="#vue文件引用字体图标" aria-hidden="true">#</a> vue文件引用字体图标</h3><p>unicode方式引用字体图标</p><p>在App.vue文件的&lt;style&gt;标签下完成引用ttf字体文件和定义iconfont的样式。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> <span class="token atrule"><span class="token rule">@font-face</span></span> <span class="token punctuation">{</span>
	<span class="token property">font-family</span><span class="token punctuation">:</span><span class="token string">&#39;iconfont&#39;</span><span class="token punctuation">;</span>
	<span class="token property">src</span><span class="token punctuation">:</span><span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;~@/static/icon/iconfont.ttf&#39;</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span>   //<span class="token property">或者直接引用生成的ttf文件在线地址，注意加上https</span><span class="token punctuation">:</span>
<span class="token punctuation">}</span>
	
<span class="token selector">//这里样式名可以随便起
.iconfont</span><span class="token punctuation">{</span>
	<span class="token property">font-family</span><span class="token punctuation">:</span> iconfont<span class="token punctuation">;</span>   //这里的font-family就要对应上面的font-family，并且注意没有引号。
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用方式：用text标签，加上类名iconfont，内容为编码。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>iconfont<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span>blue</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token entity" title="">&amp;#xe62f;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>类名方式引用字体图标</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> <span class="token atrule"><span class="token rule">@import</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;~@/static/icon/iconfont.css&#39;</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span></span> 
//任意一种方式都可
<span class="token atrule"><span class="token rule">@import</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;https://at.alicdn.com/t/font_2642470_oel66twfjxg.css&#39;</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span></span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用方式：用text标签，加上类名iconfont和后面的专属类名icon-xxxx</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>iconfont icon-biaoqian<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">font-size</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>微信开发者工具只能引用本地图标</strong>，上线时需要在线方式引入。（目前不知道怎么引入）</p><h3 id="nvue文件引用字体图标-nvue文件主要针对的是app端的原生渲染" tabindex="-1"><a class="header-anchor" href="#nvue文件引用字体图标-nvue文件主要针对的是app端的原生渲染" aria-hidden="true">#</a> nvue文件引用字体图标（nvue文件主要针对的是app端的原生渲染）</h3><p>nvue要使用unicode引入。不可直接使用css的方式引入字体文件，需要在每个nvue文件中使用js的方式注入，无法在App,vue全局引入。</p><p>且不支持本地路径引入字体，要使用网络链接或base64形式。</p><p>步骤：在nvue文件中的beforeCreate生命周期函数中注入样式，再声明一个样式去引用它。</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
      <span class="token keyword">export</span> <span class="token keyword">default</span><span class="token punctuation">{</span>
            <span class="token function">beforeCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> domModule <span class="token operator">=</span> uni<span class="token punctuation">.</span><span class="token function">requireNativePlugin</span><span class="token punctuation">(</span><span class="token string">&#39;dom&#39;</span><span class="token punctuation">)</span>
                domModule<span class="token punctuation">.</span><span class="token function">addRule</span><span class="token punctuation">(</span><span class="token string">&#39;fontFace&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
                    <span class="token string-property property">&#39;fontFamily&#39;</span><span class="token operator">:</span> <span class="token string">&quot;myIconfont&quot;</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&#39;src&#39;</span><span class="token operator">:</span> <span class="token string">&quot;url(&#39;http://at.alicdn.com/t/font_2234252_v3hj1klw6k9.ttf&#39;)&quot;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
     <span class="token selector">.my-iconfont</span> <span class="token punctuation">{</span>
            <span class="token property">font-family</span><span class="token punctuation">:</span>myIconfont<span class="token punctuation">;</span>
            <span class="token property">font-size</span><span class="token punctuation">:</span>60rpx<span class="token punctuation">;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> #00AAFF<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myIconfont<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span>blue</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token entity" title="">&amp;#xe62f;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="引用彩色图标" tabindex="-1"><a class="header-anchor" href="#引用彩色图标" aria-hidden="true">#</a> 引用彩色图标</h3><p>需要把图标文件都下载下来，然后其中的核心文件是eot文件。</p><p>全局安装iconfont-tools转换工具</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm i -g iconfont-tools
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后进入eot的文件夹，cmd执行：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>iconfont-tools
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+u+'" alt="image-20220208214934121"></p><p>prefix为类名前缀，如同之前的引入前面都要有iconfont</p><p>生成的文件里除了第二个css文件，其他都是针对微信小程序的。</p><p>直接把这个css文件放到static的文件夹下。</p><p><img src="'+r+`" alt="image-20220208214952577"></p><p>使用方式：在全局文件App.vue中引入</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>	@import <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;~@/static/icon/iconfont-weapp-icon.css&#39;</span><span class="token punctuation">)</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>t-icon t-icon-xxx<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这种引入方式好像和unicode的方式有冲突，有unicode的引入时彩色图标不能显示。</p><h2 id="bounce上拉下拉回弹" tabindex="-1"><a class="header-anchor" href="#bounce上拉下拉回弹" aria-hidden="true">#</a> bounce上拉下拉回弹</h2><p>backgroundColor 下拉窗口显示出来的窗口背景色</p><p>backgroundColorTop 顶部回弹色</p><p>backgroundColorBottom 底部回弹色</p><h2 id="上拉刷新下拉触底" tabindex="-1"><a class="header-anchor" href="#上拉刷新下拉触底" aria-hidden="true">#</a> 上拉刷新下拉触底</h2><p>一般针对需要的页面进行配置</p><p>enablePullDownRefresh设为true。要写在pages的style里</p><p>backgroundTextStyle下拉loading的样式，只支持dark和light，默认为dark</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>//下拉刷新的生命周期函数
onPullDownRefresh() {
	console.log(&#39;refresh&#39;)	
},
//页面滚动到底部的生命周期函数。上拉触底触发。
onReachBottom() {
	console.log(&#39;到底了&#39;)
},
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>onReachBottomDistance 页面上拉触底时间触发时距离页面底部的距离，单位只支持px。</p><p>设置为0时为真正的触底触发。要有进度条才会触发生命周期函数。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;pages&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token comment">//pages数组中第一项表示应用启动页</span>
		<span class="token punctuation">{</span>
			<span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pages/index/index&quot;</span><span class="token punctuation">,</span>
			<span class="token property">&quot;style&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
				<span class="token property">&quot;navigationBarTitleText&quot;</span><span class="token operator">:</span> <span class="token string">&quot;uni-app&quot;</span><span class="token punctuation">,</span>
				<span class="token property">&quot;backgroundColorTop&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#007AFF&quot;</span><span class="token punctuation">,</span>
				<span class="token property">&quot;enablePullDownRefresh&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
				<span class="token property">&quot;backgroundTextStyle&quot;</span><span class="token operator">:</span> <span class="token string">&quot;light&quot;</span><span class="token punctuation">,</span>
				<span class="token property">&quot;onReachBottomDistance&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
				<span class="token property">&quot;backgroundColorBottom&quot;</span><span class="token operator">:</span><span class="token string">&quot;#333333&quot;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="pages页面配置项" tabindex="-1"><a class="header-anchor" href="#pages页面配置项" aria-hidden="true">#</a> pages页面配置项</h2><p>path：写相对路经，最后面的vue或者nvue都可以省略</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;pages&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token comment">//pages数组中第一项表示应用启动页</span>
		<span class="token punctuation">{</span>
			<span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pages/index/index&quot;</span><span class="token punctuation">,</span>
			<span class="token property">&quot;style&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
				<span class="token property">&quot;navigationBarTitleText&quot;</span><span class="token operator">:</span> <span class="token string">&quot;uni-app&quot;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token property">&quot;globalStyle&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;navigationBarTextStyle&quot;</span><span class="token operator">:</span> <span class="token string">&quot;black&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;navigationBarTitleText&quot;</span><span class="token operator">:</span> <span class="token string">&quot;uni-app&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;navigationBarBackgroundColor&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#F8F8F8&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;backgroundColor&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#F8F8F8&quot;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>pages.json全局配置导航栏和状态栏。</p><p>globalStyle为全局页面配置，如果在pages中单独配置了相同项，则以pages的为准。</p><p>navigationBarBackgroundColor导航栏、状态栏背景色。</p><p>navigationBarTitleText导航栏名称</p><p>navigationBarTitleStyle导航栏字体色，只支持white和black</p><p>titleImage导航栏图片地址。不能以@开头。（在微信小程序好像并不起作用）会覆盖所有的title，就算pages页配置了自己的titleText。</p><p>disableScroll 为true时禁止y轴滚动，只能在pages里配置。</p><p>还有很多app-plus的配置，主要用于app端的配置，部分常用配置H5端也会生效，下面主要记录一些H5端也生效的配置。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;pages&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token comment">//pages数组中第一项表示应用启动页，参考：https://uniapp.dcloud.io/collocation/pages</span>
		<span class="token punctuation">{</span>
			<span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pages/index/index&quot;</span><span class="token punctuation">,</span>
			<span class="token property">&quot;style&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
				<span class="token property">&quot;navigationBarTitleText&quot;</span><span class="token operator">:</span> <span class="token string">&quot;uni-app&quot;</span><span class="token punctuation">,</span>
				<span class="token property">&quot;disableScroll&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token property">&quot;globalStyle&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;navigationBarTextStyle&quot;</span><span class="token operator">:</span> <span class="token string">&quot;black&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;navigationBarTitleText&quot;</span><span class="token operator">:</span> <span class="token string">&quot;uni-app&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;navigationBarBackgroundColor&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#F8F8F8&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;backgroundColor&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#F8F8F8&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;app-plus&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token property">&quot;titleNView&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">//自定义导航栏.APP,H5</span>
				<span class="token property">&quot;backgroundColor&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#808080&quot;</span><span class="token punctuation">,</span> <span class="token comment">//导航栏背景色。如果pages的style也设置了，style里的优先级比这里高</span>
				<span class="token property">&quot;buttons&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
						<span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;share&quot;</span>
						<span class="token comment">// 值	说明</span>
						<span class="token comment">// forward 前进按钮</span>
						<span class="token comment">// back 后退按钮</span>
						<span class="token comment">// share 分享按钮</span>
						<span class="token comment">// favorite 收藏按钮</span>
						<span class="token comment">// home 主页按钮</span>
						<span class="token comment">// menu 菜单按钮</span>
						<span class="token comment">// close 关闭按钮</span>
						<span class="token comment">// none 无样式， 需通过 text 属性设置按钮上显示的内容、 通过 fontSrc 属性设置使用的字体库。</span>
					<span class="token punctuation">}</span><span class="token punctuation">,</span>
					<span class="token punctuation">{</span>
						<span class="token comment">//使用type时会忽略fontSrc和text</span>
						<span class="token property">&quot;fontSrc&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/static/iconfont.ttf&quot;</span><span class="token punctuation">,</span> <span class="token comment">//只能unicode引入，且本地引入</span>
						<span class="token property">&quot;text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\ueca7&quot;</span><span class="token punctuation">,</span> <span class="token comment">//&amp;#xeca7;</span>
						<span class="token property">&quot;fontSize&quot;</span><span class="token operator">:</span> <span class="token string">&quot;23&quot;</span><span class="token punctuation">,</span>
						<span class="token property">&quot;float&quot;</span><span class="token operator">:</span> <span class="token string">&quot;left&quot;</span><span class="token punctuation">,</span>
						<span class="token property">&quot;fontWeight&quot;</span><span class="token operator">:</span> <span class="token string">&quot;bold&quot;</span>
						<span class="token comment">//使用字体图标时 unicode 字符表示必须 &#39;\\u&#39; 开头，如 &quot;\\ue123&quot;（注意不能写成&quot;\\e123&quot;）。</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">]</span><span class="token punctuation">,</span>
				<span class="token property">&quot;searchInput&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>  <span class="token comment">//搜索框</span>
					<span class="token property">&quot;align&quot;</span><span class="token operator">:</span> <span class="token string">&quot;center&quot;</span><span class="token punctuation">,</span> <span class="token comment">//非输入状态下文本的位置</span>
					<span class="token property">&quot;autoFocus&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//H5无效</span>
					<span class="token property">&quot;backgroundColor&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#f0f1f2&quot;</span><span class="token punctuation">,</span>
					<span class="token property">&quot;borderRadius&quot;</span><span class="token operator">:</span> <span class="token string">&quot;10px&quot;</span><span class="token punctuation">,</span>
					<span class="token property">&quot;placeholder&quot;</span><span class="token operator">:</span> <span class="token string">&quot;输入搜索内容...&quot;</span><span class="token punctuation">,</span>
					<span class="token comment">// &quot;disabled&quot;: true,//是否禁用.一般来说点击后跳转到某页搜索</span>
					<span class="token property">&quot;placeholderColor&quot;</span><span class="token operator">:</span><span class="token string">&quot;#979c9d&quot;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
		<span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token punctuation">{</span>
				<span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Hello&#39;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>

		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token comment">//点击输入框,监听原生标题栏搜索输入框点击事件（pages.json 中的 searchInput 配置 disabled 为 true 时才会触发）</span>
		<span class="token function">onNavigationBarSearchInputClicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;点击输入框&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token comment">//文本变化</span>
		<span class="token function">onNavigationBarSearchInputChanged</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;文本变化&#39;</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//e.text获取输入框的内容</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token comment">//点击搜索按钮,监听原生标题栏搜索输入框搜索事件，用户点击软键盘上的“搜索”按钮时触发</span>
		<span class="token function">onNavigationBarSearchInputConfirmed</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;点击搜索按钮&#39;</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//e.text获取输入框的内容</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="tabbar配置项" tabindex="-1"><a class="header-anchor" href="#tabbar配置项" aria-hidden="true">#</a> tabBar配置项</h2><p>与pages同级</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;pages&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token comment">//pages数组中第一项表示应用启动页</span>
		<span class="token punctuation">{</span>
			....
		<span class="token punctuation">}</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token property">&quot;tabBar&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;color&quot;</span><span class="token operator">:</span><span class="token string">&quot;#DD524D&quot;</span><span class="token punctuation">,</span><span class="token comment">//未选中时的字体颜色</span>
		<span class="token property">&quot;selectedColor&quot;</span><span class="token operator">:</span><span class="token string">&quot;#007AFF&quot;</span><span class="token punctuation">,</span><span class="token comment">//选中时的字体颜色</span>
		<span class="token property">&quot;backgroundColor&quot;</span><span class="token operator">:</span><span class="token string">&quot;#333333&quot;</span><span class="token punctuation">,</span><span class="token comment">//tab背景色</span>
         <span class="token property">&quot;borderStyle&quot;</span><span class="token operator">:</span><span class="token string">&quot;white&quot;</span><span class="token punctuation">,</span><span class="token comment">//tabBar上边框的颜色，默认为black，只有黑白</span>
        <span class="token property">&quot;position&quot;</span><span class="token operator">:</span><span class="token string">&quot;bottom&quot;</span><span class="token punctuation">,</span> <span class="token comment">//导航栏位置，top只有微信小程序支持。默认bottom，并且为top时不显示icom</span>
        
        <span class="token comment">//------这里的内容配置微信小程序无效-----</span>
		<span class="token property">&quot;fontSize&quot;</span><span class="token operator">:</span><span class="token string">&quot;14px&quot;</span><span class="token punctuation">,</span><span class="token comment">//字体大小，默认为10px</span>
		<span class="token property">&quot;iconWidth&quot;</span><span class="token operator">:</span><span class="token string">&quot;24px&quot;</span><span class="token punctuation">,</span><span class="token comment">//图标宽度，高度等比例缩放，默认24px</span>
		<span class="token property">&quot;spacing&quot;</span><span class="token operator">:</span><span class="token string">&quot;3px&quot;</span><span class="token punctuation">,</span><span class="token comment">//图标和文字的间距，默认3px</span>
		<span class="token property">&quot;height&quot;</span><span class="token operator">:</span><span class="token string">&quot;50px&quot;</span><span class="token punctuation">,</span><span class="token comment">//tabBar高度，默认50px</span>
        <span class="token comment">//------这里的内容配置微信小程序无效-----</span>
        
		<span class="token property">&quot;list&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token comment">//tab列表配置---最少两个，最多五个</span>
			<span class="token punctuation">{</span>
				<span class="token property">&quot;pagePath&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pages/index/index&quot;</span><span class="token punctuation">,</span> <span class="token comment">//页面路径，必须在pages中先定义</span>
				<span class="token property">&quot;text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;首页&quot;</span><span class="token punctuation">,</span> <span class="token comment">//App和H5非必填，小程序必填</span>
				<span class="token property">&quot;iconPath&quot;</span><span class="token operator">:</span> <span class="token string">&quot;static/icon/home.png&quot;</span><span class="token punctuation">,</span>   <span class="token comment">//未选中时的图片路径</span>
				<span class="token property">&quot;selectedIconPath&quot;</span><span class="token operator">:</span> <span class="token string">&quot;static/icon/home-active.png&quot;</span>   <span class="token comment">//选中时的图片路径</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span>
			<span class="token punctuation">{</span>
				<span class="token property">&quot;pagePath&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pages/myFavourite/myFavourite&quot;</span><span class="token punctuation">,</span>
				<span class="token property">&quot;text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;收藏&quot;</span><span class="token punctuation">,</span>
				<span class="token property">&quot;iconPath&quot;</span><span class="token operator">:</span> <span class="token string">&quot;static/icon/home.png&quot;</span><span class="token punctuation">,</span>
				<span class="token property">&quot;selectedIconPath&quot;</span><span class="token operator">:</span> <span class="token string">&quot;static/icon/home-active.png&quot;</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span>
			<span class="token punctuation">{</span>
				<span class="token property">&quot;pagePath&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pages/user/user&quot;</span><span class="token punctuation">,</span>
				<span class="token property">&quot;text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;我的&quot;</span><span class="token punctuation">,</span>
				<span class="token property">&quot;iconPath&quot;</span><span class="token operator">:</span> <span class="token string">&quot;static/icon/my.png&quot;</span><span class="token punctuation">,</span>
				<span class="token property">&quot;selectedIconPath&quot;</span><span class="token operator">:</span> <span class="token string">&quot;static/icon/my-active.png&quot;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">]</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>tabbar 切换第一次加载时可能渲染不及时，可以在每个tabbar页面的onLoad生命周期里先弹出一个等待雪花</p><p>tabbar 的页面展现过一次后就保留在内存中，再次切换 tabbar 页面，只会触发每个页面的onShow，不会再触发onLoad。</p><h2 id="路由跳转" tabindex="-1"><a class="header-anchor" href="#路由跳转" aria-hidden="true">#</a> 路由跳转</h2><h3 id="uni-navigateto-obj" tabindex="-1"><a class="header-anchor" href="#uni-navigateto-obj" aria-hidden="true">#</a> uni.navigateTo(obj)</h3><p>保留当前页面，跳转到应用内的某个页面，使用<code>uni.navigateBack</code>可以返回到原页面。</p><p>用button绑定toMy事件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token function-variable function">toMy</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">//只能跳转到非tabBar页面</span>
				<span class="token keyword">let</span> params<span class="token operator">=</span><span class="token punctuation">{</span>
					<span class="token literal-property property">test</span><span class="token operator">:</span><span class="token string">&#39;123&#39;</span>
				<span class="token punctuation">}</span>
				uni<span class="token punctuation">.</span><span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
					<span class="token comment">//携带参数用？隔开，不同参数用&amp;分隔。跳转后的页面onLoad得到参数	</span>
					<span class="token comment">//要携带对象要转换成json字符串</span>
					<span class="token comment">//url是有长度限制的。如果参数太长，则需要通过编码转换。encode编码，decode解码</span>
					<span class="token comment">// url: \`/pages/auth/login?name=wxj&amp;sex=male&amp;params=\${encodeURIComponent(JSON.stringify(params))}\`,</span>
					<span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/pages/auth/login?name=wxj&amp;sex=male&amp;params=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
					<span class="token literal-property property">animationType</span><span class="token operator">:</span> <span class="token string">&#39;slide-in-bottom&#39;</span><span class="token punctuation">,</span> <span class="token comment">//只对app端有效</span>
					<span class="token literal-property property">animationDuration</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token comment">//动画持续时长,ms</span>
					<span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">//成功回调</span>
						console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                          <span class="token comment">// 通过eventChannel向被打开页面传送数据</span>
						res<span class="token punctuation">.</span>eventChannel<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;eventTest&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
							<span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">&#39;data from starter page&#39;</span>
						<span class="token punctuation">}</span><span class="token punctuation">)</span>
					<span class="token punctuation">}</span><span class="token punctuation">,</span>
					<span class="token function-variable function">fail</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>	<span class="token comment">//失败回调</span>
						console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fail&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span><span class="token punctuation">,</span>
					<span class="token function-variable function">complete</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>	<span class="token comment">//无论成功与否都会执行的回调</span>
						console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;complete&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span><span class="token punctuation">,</span>
                      <span class="token literal-property property">events</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                          <span class="token comment">// 获取被打开页面传送到当前页面的数据</span>
						<span class="token function">eventTest</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
							console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;events&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
						<span class="token punctuation">}</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>跳转页：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
	<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
		<span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token punctuation">{</span>

			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>

		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//第一个参数接收传递过来的参数</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">// console.log(&#39;??&#39;,JSON.parse(decodeURIComponent(data?.params || null)))</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;xx&#39;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token operator">?.</span>params <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        
                        
             <span class="token keyword">const</span> eventChannel <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getOpenerEventChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			  eventChannel<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;eventTest&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">&#39;data from test page&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//会触发index页的eventTest函数</span>
			  <span class="token comment">// 监听eventTest事件，获取上一页面通过eventChannel传送到当前页面的数据.</span>
			   eventChannel<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;eventTest&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">//不知道是不是有bug，并没有触发到这里函数</span>
			     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;test page!!&#39;</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span>
			  <span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="uni-redirectto-obj" tabindex="-1"><a class="header-anchor" href="#uni-redirectto-obj" aria-hidden="true">#</a> uni.redirectTo(obj)</h3><p>关闭当前页面，还保留返回按钮。可返回上上个页面。参数和navagateTo基本一致，没有events</p><h3 id="uni-relaunch-obj" tabindex="-1"><a class="header-anchor" href="#uni-relaunch-obj" aria-hidden="true">#</a> uni.reLaunch(obj)</h3><p>关闭所有页面，没有返回按钮。可以跳转到tabBar页面，但是跳转到tabBar页面时不能携带参数。</p>`,98),v=n("strong",null,"注意：",-1),g={href:"https://uniapp.dcloud.net.cn/api/preload-page",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"onHide",-1),b=n("ul",null,[n("li",null,[s("H5端调用"),n("code",null,"uni.reLaunch"),s("之后之前页面栈会销毁，但是无法清空浏览器之前的历史记录，此时"),n("code",null,"navigateBack"),s("不能返回，如果存在历史记录的话点击浏览器的返回按钮或者调用"),n("code",null,"history.back()"),s("仍然可以导航到浏览器的其他历史记录。")])],-1),h=n("h3",{id:"uni-switchtab-obj",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#uni-switchtab-obj","aria-hidden":"true"},"#"),s(" uni.switchTab(obj)")],-1),y=n("p",null,"跳转tabBar选项卡页.并关闭其他所有非 tabBar 页面。不能携带参数",-1),f=n("strong",null,"注意：",-1),x={href:"https://uniapp.dcloud.net.cn/api/preload-page",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"onHide",-1),q=e(`<h3 id="uni-navigateback-obj" tabindex="-1"><a class="header-anchor" href="#uni-navigateback-obj" aria-hidden="true">#</a> uni.navigateBack(obj)</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>uni.navigateBack({
	delta:2,//返回的页面数，默认为1，超过现有页面数则返回首页
})
uni.navigateBack() //返回上一页
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>H5端页面刷新之后页面栈会消失，此时<code>navigateBack</code>不能返回，如果一定要返回可以使用<code>history.back()</code>导航到浏览器的其他历史记录。</li></ul><h3 id="navigator组件跳转" tabindex="-1"><a class="header-anchor" href="#navigator组件跳转" aria-hidden="true">#</a> navigator组件跳转</h3><p>该组件类似HTML中的<code>&lt;a&gt;</code>组件，但只能跳转本地页面。目标页面必须在pages.json中注册。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span>                    //动态传参
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>navigator</span> <span class="token attr-name">:url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\`/pages/auth/login?params=\${encodeURIComponent(JSON.stringify(obj))}\`<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>去登录页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>navigator</span><span class="token punctuation">&gt;</span></span>
    		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>navigator</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/pages/auth/login?id=1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">open-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navigate<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> //默认为navigate
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>去登录页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>navigator</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>open-type 有效值</strong></p><table><thead><tr><th style="text-align:left;">值</th><th style="text-align:left;">说明</th><th style="text-align:left;">平台差异说明</th></tr></thead><tbody><tr><td style="text-align:left;">navigate</td><td style="text-align:left;">对应 uni.navigateTo 的功能</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">redirect</td><td style="text-align:left;">对应 uni.redirectTo 的功能</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">switchTab</td><td style="text-align:left;">对应 uni.switchTab 的功能</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">reLaunch</td><td style="text-align:left;">对应 uni.reLaunch 的功能</td><td style="text-align:left;">字节跳动小程序与飞书小程序不支持</td></tr><tr><td style="text-align:left;">navigateBack</td><td style="text-align:left;">对应 uni.navigateBack 的功能</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">exit</td><td style="text-align:left;">退出小程序，target=&quot;miniProgram&quot;时生效</td><td style="text-align:left;">微信2.1.0+、百度2.5.2+、QQ1.4.7+</td></tr></tbody></table><p>当 open-type 为 &#39;navigateBack&#39; 时，还有一个delta参数，接收nubmer数据。表示回退的层数。默认为1。</p><p>hover-class点击时的样式类，为none时没有效果</p><h2 id="uni-app生命周期" tabindex="-1"><a class="header-anchor" href="#uni-app生命周期" aria-hidden="true">#</a> uni-app生命周期</h2><h3 id="应用生命周期" tabindex="-1"><a class="header-anchor" href="#应用生命周期" aria-hidden="true">#</a> 应用生命周期</h3><table><thead><tr><th style="text-align:left;">函数名</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">onLaunch</td><td style="text-align:left;">当<code>uni-app</code> 初始化完成时触发（全局只触发一次）</td></tr><tr><td style="text-align:left;">onShow</td><td style="text-align:left;">当 <code>uni-app</code> 启动，或从后台进入前台显示</td></tr><tr><td style="text-align:left;">onHide</td><td style="text-align:left;">当 <code>uni-app</code> 从前台进入后台</td></tr><tr><td style="text-align:left;">onError</td><td style="text-align:left;">当 <code>uni-app</code> 报错时触发</td></tr><tr><td style="text-align:left;">onPageNotFound</td><td style="text-align:left;">页面不存在监听函数</td></tr></tbody></table><p><strong>注意</strong></p><ul><li>应用生命周期仅可在<code>App.vue</code>中监听，在其它页面监听无效。</li><li>onlaunch里进行页面跳转，如遇白屏报错，请参考https://ask.dcloud.net.cn/article/35942</li><li>onPageNotFound 页面实际上已经打开了（比如通过分享卡片、小程序码）且发现页面不存在，才会触发，api 跳转不存在的页面不会触发（如 uni.navigateTo）</li></ul>`,15),j={href:"https://uniapp.dcloud.io/api/system/network?id=getnetworktype",target:"_blank",rel:"noopener noreferrer"},w=e(`<p>tabbar 切换第一次加载时可能渲染不及时，可以在每个tabbar页面的onLoad生命周期里先弹出一个等待雪花</p><p>tabbar 的页面展现过一次后就保留在内存中，再次切换 tabbar 页面，只会触发每个页面的onShow，不会再触发onLoad。</p><h2 id="路由跳转-1" tabindex="-1"><a class="header-anchor" href="#路由跳转-1" aria-hidden="true">#</a> 路由跳转</h2><h3 id="uni-navigateto-obj-1" tabindex="-1"><a class="header-anchor" href="#uni-navigateto-obj-1" aria-hidden="true">#</a> uni.navigateTo(obj)</h3><p>保留当前页面，跳转到应用内的某个页面，使用<code>uni.navigateBack</code>可以返回到原页面。</p><p>用button绑定toMy事件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token function-variable function">toMy</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">//只能跳转到非tabBar页面</span>
				<span class="token keyword">let</span> params<span class="token operator">=</span><span class="token punctuation">{</span>
					<span class="token literal-property property">test</span><span class="token operator">:</span><span class="token string">&#39;123&#39;</span>
				<span class="token punctuation">}</span>
				uni<span class="token punctuation">.</span><span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
					<span class="token comment">//携带参数用？隔开，不同参数用&amp;分隔。跳转后的页面onLoad得到参数	</span>
					<span class="token comment">//要携带对象要转换成json字符串</span>
					<span class="token comment">//url是有长度限制的。如果参数太长，则需要通过编码转换。encode编码，decode解码</span>
					<span class="token comment">// url: \`/pages/auth/login?name=wxj&amp;sex=male&amp;params=\${encodeURIComponent(JSON.stringify(params))}\`,</span>
					<span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/pages/auth/login?name=wxj&amp;sex=male&amp;params=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
					<span class="token literal-property property">animationType</span><span class="token operator">:</span> <span class="token string">&#39;slide-in-bottom&#39;</span><span class="token punctuation">,</span> <span class="token comment">//只对app端有效</span>
					<span class="token literal-property property">animationDuration</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token comment">//动画持续时长,ms</span>
					<span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">//成功回调</span>
						console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                          <span class="token comment">// 通过eventChannel向被打开页面传送数据</span>
						res<span class="token punctuation">.</span>eventChannel<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;eventTest&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
							<span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">&#39;data from starter page&#39;</span>
						<span class="token punctuation">}</span><span class="token punctuation">)</span>
					<span class="token punctuation">}</span><span class="token punctuation">,</span>
					<span class="token function-variable function">fail</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>	<span class="token comment">//失败回调</span>
						console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fail&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span><span class="token punctuation">,</span>
					<span class="token function-variable function">complete</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>	<span class="token comment">//无论成功与否都会执行的回调</span>
						console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;complete&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span><span class="token punctuation">,</span>
                      <span class="token literal-property property">events</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                          <span class="token comment">// 获取被打开页面传送到当前页面的数据</span>
						<span class="token function">eventTest</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
							console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;events&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
						<span class="token punctuation">}</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>跳转页：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
	<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
		<span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token punctuation">{</span>

			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>

		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//第一个参数接收传递过来的参数</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">// console.log(&#39;??&#39;,JSON.parse(decodeURIComponent(data?.params || null)))</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;xx&#39;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token operator">?.</span>params <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        
                        
             <span class="token keyword">const</span> eventChannel <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getOpenerEventChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			  eventChannel<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;eventTest&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">&#39;data from test page&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//会触发index页的eventTest函数</span>
			  <span class="token comment">// 监听eventTest事件，获取上一页面通过eventChannel传送到当前页面的数据.</span>
			   eventChannel<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;eventTest&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">//不知道是不是有bug，并没有触发到这里函数</span>
			     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;test page!!&#39;</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span>
			  <span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="uni-redirectto-obj-1" tabindex="-1"><a class="header-anchor" href="#uni-redirectto-obj-1" aria-hidden="true">#</a> uni.redirectTo(obj)</h3><p>关闭当前页面，还保留返回按钮。可返回上上个页面。参数和navagateTo基本一致，没有events</p><h3 id="uni-relaunch-obj-1" tabindex="-1"><a class="header-anchor" href="#uni-relaunch-obj-1" aria-hidden="true">#</a> uni.reLaunch(obj)</h3><p>关闭所有页面，没有返回按钮。可以跳转到tabBar页面，但是跳转到tabBar页面时不能携带参数。</p>`,13),S=n("strong",null,"注意：",-1),B={href:"https://uniapp.dcloud.net.cn/api/preload-page",target:"_blank",rel:"noopener noreferrer"},T=n("code",null,"onHide",-1),C=n("ul",null,[n("li",null,[s("H5端调用"),n("code",null,"uni.reLaunch"),s("之后之前页面栈会销毁，但是无法清空浏览器之前的历史记录，此时"),n("code",null,"navigateBack"),s("不能返回，如果存在历史记录的话点击浏览器的返回按钮或者调用"),n("code",null,"history.back()"),s("仍然可以导航到浏览器的其他历史记录。")])],-1),P=n("h3",{id:"uni-switchtab-obj-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#uni-switchtab-obj-1","aria-hidden":"true"},"#"),s(" uni.switchTab(obj)")],-1),A=n("p",null,"跳转tabBar选项卡页.并关闭其他所有非 tabBar 页面。不能携带参数",-1),N=n("strong",null,"注意：",-1),F={href:"https://uniapp.dcloud.net.cn/api/preload-page",target:"_blank",rel:"noopener noreferrer"},H=n("code",null,"onHide",-1),I=e(`<h3 id="uni-navigateback-obj-1" tabindex="-1"><a class="header-anchor" href="#uni-navigateback-obj-1" aria-hidden="true">#</a> uni.navigateBack(obj)</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>uni.navigateBack({
	delta:2,//返回的页面数，默认为1，超过现有页面数则返回首页
})
uni.navigateBack() //返回上一页
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>H5端页面刷新之后页面栈会消失，此时<code>navigateBack</code>不能返回，如果一定要返回可以使用<code>history.back()</code>导航到浏览器的其他历史记录。</li></ul><h3 id="navigator组件跳转-1" tabindex="-1"><a class="header-anchor" href="#navigator组件跳转-1" aria-hidden="true">#</a> navigator组件跳转</h3><p>该组件类似HTML中的<code>&lt;a&gt;</code>组件，但只能跳转本地页面。目标页面必须在pages.json中注册。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span>                    //动态传参
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>navigator</span> <span class="token attr-name">:url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\`/pages/auth/login?params=\${encodeURIComponent(JSON.stringify(obj))}\`<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>去登录页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>navigator</span><span class="token punctuation">&gt;</span></span>
    		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>navigator</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/pages/auth/login?id=1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">open-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navigate<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> //默认为navigate
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>去登录页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>navigator</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>open-type 有效值</strong></p><table><thead><tr><th style="text-align:left;">值</th><th style="text-align:left;">说明</th><th style="text-align:left;">平台差异说明</th></tr></thead><tbody><tr><td style="text-align:left;">navigate</td><td style="text-align:left;">对应 uni.navigateTo 的功能</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">redirect</td><td style="text-align:left;">对应 uni.redirectTo 的功能</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">switchTab</td><td style="text-align:left;">对应 uni.switchTab 的功能</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">reLaunch</td><td style="text-align:left;">对应 uni.reLaunch 的功能</td><td style="text-align:left;">字节跳动小程序与飞书小程序不支持</td></tr><tr><td style="text-align:left;">navigateBack</td><td style="text-align:left;">对应 uni.navigateBack 的功能</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">exit</td><td style="text-align:left;">退出小程序，target=&quot;miniProgram&quot;时生效</td><td style="text-align:left;">微信2.1.0+、百度2.5.2+、QQ1.4.7+</td></tr></tbody></table><p>当 open-type 为 &#39;navigateBack&#39; 时，还有一个delta参数，接收nubmer数据。表示回退的层数。默认为1。</p><p>hover-class点击时的样式类，为none时没有效果</p><h2 id="uni-app生命周期-1" tabindex="-1"><a class="header-anchor" href="#uni-app生命周期-1" aria-hidden="true">#</a> uni-app生命周期</h2><h3 id="应用生命周期-1" tabindex="-1"><a class="header-anchor" href="#应用生命周期-1" aria-hidden="true">#</a> 应用生命周期</h3><table><thead><tr><th style="text-align:left;">函数名</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">onLaunch</td><td style="text-align:left;">当<code>uni-app</code> 初始化完成时触发（全局只触发一次）</td></tr><tr><td style="text-align:left;">onShow</td><td style="text-align:left;">当 <code>uni-app</code> 启动，或从后台进入前台显示</td></tr><tr><td style="text-align:left;">onHide</td><td style="text-align:left;">当 <code>uni-app</code> 从前台进入后台</td></tr><tr><td style="text-align:left;">onError</td><td style="text-align:left;">当 <code>uni-app</code> 报错时触发</td></tr><tr><td style="text-align:left;">onPageNotFound</td><td style="text-align:left;">页面不存在监听函数</td></tr></tbody></table><p><strong>注意</strong></p><ul><li>应用生命周期仅可在<code>App.vue</code>中监听，在其它页面监听无效。</li><li>onlaunch里进行页面跳转，如遇白屏报错，请参考https://ask.dcloud.net.cn/article/35942</li><li>onPageNotFound 页面实际上已经打开了（比如通过分享卡片、小程序码）且发现页面不存在，才会触发，api 跳转不存在的页面不会触发（如 uni.navigateTo）</li></ul>`,15),E={href:"https://uniapp.dcloud.io/api/system/network?id=getnetworktype",target:"_blank",rel:"noopener noreferrer"},O=n("h3",{id:"页面生命周期",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#页面生命周期","aria-hidden":"true"},"#"),s(" 页面生命周期")],-1),L=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"center"}},"函数名"),n("th",{style:{"text-align":"center"}},"说明"),n("th",{style:{"text-align":"left"}},"平台差异说明")])],-1),J=n("td",{style:{"text-align":"center"}},"onLoad",-1),U={style:{"text-align":"center"}},D={href:"https://uniapp.dcloud.io/api/router?id=navigateto",target:"_blank",rel:"noopener noreferrer"},R=n("td",{style:{"text-align":"left"}},null,-1),V=n("tr",null,[n("td",{style:{"text-align":"center"}},"onShow"),n("td",{style:{"text-align":"center"}},"监听页面显示。页面每次出现在屏幕上都触发，包括从下级页面点返回露出当前页面"),n("td",{style:{"text-align":"left"}})],-1),M=n("tr",null,[n("td",{style:{"text-align":"center"}},"onReady"),n("td",{style:{"text-align":"center"}},"监听页面初次渲染完成。注意如果渲染速度快，会在页面进入动画完成前触发"),n("td",{style:{"text-align":"left"}})],-1),z=n("tr",null,[n("td",{style:{"text-align":"center"}},"onHide"),n("td",{style:{"text-align":"center"}},"监听页面隐藏"),n("td",{style:{"text-align":"left"}})],-1),Q=n("tr",null,[n("td",{style:{"text-align":"center"}},"onUnload"),n("td",{style:{"text-align":"center"}},"监听页面卸载"),n("td",{style:{"text-align":"left"}})],-1),$=n("tr",null,[n("td",{style:{"text-align":"center"}},"onResize"),n("td",{style:{"text-align":"center"}},"监听窗口尺寸变化"),n("td",{style:{"text-align":"left"}},"App、微信小程序")],-1),W=n("td",{style:{"text-align":"center"}},"onPullDownRefresh",-1),K={style:{"text-align":"center"}},X={href:"https://uniapp.dcloud.io/api/ui/pulldown",target:"_blank",rel:"noopener noreferrer"},Y=n("td",{style:{"text-align":"left"}},null,-1),G=n("tr",null,[n("td",{style:{"text-align":"center"}},"onReachBottom"),n("td",{style:{"text-align":"center"}},"页面滚动到底部的事件（不是scroll-view滚到底），常用于下拉下一页数据。具体见下方注意事项"),n("td",{style:{"text-align":"left"}})],-1),Z=n("tr",null,[n("td",{style:{"text-align":"center"}},"onTabItemTap"),n("td",{style:{"text-align":"center"}},"点击 tab 时触发，参数为Object，具体见下方注意事项"),n("td",{style:{"text-align":"left"}},"微信小程序、QQ小程序、支付宝小程序、百度小程序、H5、App")],-1),nn=n("tr",null,[n("td",{style:{"text-align":"center"}},"onShareAppMessage"),n("td",{style:{"text-align":"center"}},"用户点击右上角分享"),n("td",{style:{"text-align":"left"}},"微信小程序、QQ小程序、支付宝小程序、字节小程序、飞书小程序、快手小程序")],-1),sn=n("tr",null,[n("td",{style:{"text-align":"center"}},"onPageScroll"),n("td",{style:{"text-align":"center"}},"监听页面滚动，参数为Object"),n("td",{style:{"text-align":"left"}},"nvue暂不支持")],-1),tn=n("tr",null,[n("td",{style:{"text-align":"center"}},"onNavigationBarButtonTap"),n("td",{style:{"text-align":"center"}},"监听原生标题栏按钮点击事件，参数为Object"),n("td",{style:{"text-align":"left"}},"App、H5")],-1),an=n("td",{style:{"text-align":"center"}},"onBackPress",-1),en={style:{"text-align":"center"}},pn={href:"http://ask.dcloud.net.cn/article/35120",target:"_blank",rel:"noopener noreferrer"},on=n("td",{style:{"text-align":"left"}},"app、H5、支付宝小程序",-1),ln=n("tr",null,[n("td",{style:{"text-align":"center"}},"onNavigationBarSearchInputChanged"),n("td",{style:{"text-align":"center"}},"监听原生标题栏搜索输入框输入内容变化事件"),n("td",{style:{"text-align":"left"}},"App、H5")],-1),cn=n("tr",null,[n("td",{style:{"text-align":"center"}},"onNavigationBarSearchInputConfirmed"),n("td",{style:{"text-align":"center"}},"监听原生标题栏搜索输入框搜索事件，用户点击软键盘上的“搜索”按钮时触发。"),n("td",{style:{"text-align":"left"}},"App、H5")],-1),un=n("tr",null,[n("td",{style:{"text-align":"center"}},"onNavigationBarSearchInputClicked"),n("td",{style:{"text-align":"center"}},"监听原生标题栏搜索输入框点击事件（pages.json 中的 searchInput 配置 disabled 为 true 时才会触发）"),n("td",{style:{"text-align":"left"}},"App、H5")],-1),rn=n("tr",null,[n("td",{style:{"text-align":"center"}},"onShareTimeline"),n("td",{style:{"text-align":"center"}},"监听用户点击右上角转发到朋友圈"),n("td",{style:{"text-align":"left"}},"微信小程序")],-1),dn=n("tr",null,[n("td",{style:{"text-align":"center"}},"onAddToFavorites"),n("td",{style:{"text-align":"center"}},"监听用户点击右上角收藏"),n("td",{style:{"text-align":"left"}},"微信小程序")],-1),kn=n("h3",{id:"组件生命周期",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#组件生命周期","aria-hidden":"true"},"#"),s(" 组件生命周期")],-1),vn=n("p",null,[n("code",null,"uni-app"),s(" 组件支持的生命周期，与vue标准组件的生命周期相同。这里没有页面级的onLoad等生命周期：")],-1),gn=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"center"}},"函数名"),n("th",{style:{"text-align":"center"}},"说明"),n("th",{style:{"text-align":"center"}},"平台差异说明")])],-1),mn=n("td",{style:{"text-align":"center"}},"beforeCreate",-1),bn={style:{"text-align":"center"}},hn={href:"https://cn.vuejs.org/v2/api/#beforeCreate",target:"_blank",rel:"noopener noreferrer"},yn=n("td",{style:{"text-align":"center"}},null,-1),fn=n("td",{style:{"text-align":"center"}},"created",-1),xn={style:{"text-align":"center"}},_n={href:"https://cn.vuejs.org/v2/api/#created",target:"_blank",rel:"noopener noreferrer"},qn=n("td",{style:{"text-align":"center"}},null,-1),jn=n("td",{style:{"text-align":"center"}},"beforeMount",-1),wn={style:{"text-align":"center"}},Sn={href:"https://cn.vuejs.org/v2/api/#beforeMount",target:"_blank",rel:"noopener noreferrer"},Bn=n("td",{style:{"text-align":"center"}},null,-1),Tn=n("td",{style:{"text-align":"center"}},"mounted",-1),Cn={style:{"text-align":"center"}},Pn={href:"https://cn.vuejs.org/v2/api/#mounted",target:"_blank",rel:"noopener noreferrer"},An=n("code",null,"$nextTick",-1),Nn={href:"https://cn.vuejs.org/v2/api/#Vue-nextTick",target:"_blank",rel:"noopener noreferrer"},Fn=n("td",{style:{"text-align":"center"}},null,-1),Hn=n("td",{style:{"text-align":"center"}},"beforeUpdate",-1),In={style:{"text-align":"center"}},En={href:"https://cn.vuejs.org/v2/api/#beforeUpdate",target:"_blank",rel:"noopener noreferrer"},On=n("td",{style:{"text-align":"center"}},"仅H5平台支持",-1),Ln=n("td",{style:{"text-align":"center"}},"updated",-1),Jn={style:{"text-align":"center"}},Un={href:"https://cn.vuejs.org/v2/api/#updated",target:"_blank",rel:"noopener noreferrer"},Dn=n("td",{style:{"text-align":"center"}},"仅H5平台支持",-1),Rn=n("td",{style:{"text-align":"center"}},"beforeDestroy",-1),Vn={style:{"text-align":"center"}},Mn={href:"https://cn.vuejs.org/v2/api/#beforeDestroy",target:"_blank",rel:"noopener noreferrer"},zn=n("td",{style:{"text-align":"center"}},null,-1),Qn=n("td",{style:{"text-align":"center"}},"destroyed",-1),$n={style:{"text-align":"center"}},Wn={href:"https://cn.vuejs.org/v2/api/#destroyed",target:"_blank",rel:"noopener noreferrer"},Kn=n("td",{style:{"text-align":"center"}},null,-1),Xn=e(`<p><strong>只要是vue或nvue结尾的都可以使用组件生命周期，而只有在pages注册的页面才能使用页面生命周期，应用生命周期只有在app.vue中使用</strong></p><h3 id="process-env-node-env" tabindex="-1"><a class="header-anchor" href="#process-env-node-env" aria-hidden="true">#</a> p<wbr>rocess.env.NODE_ENV</h3><p>判断生产环境还是开发环境。开发环境--development</p><h2 id="解决跨段兼容性-条件编译语法" tabindex="-1"><a class="header-anchor" href="#解决跨段兼容性-条件编译语法" aria-hidden="true">#</a> 解决跨段兼容性-条件编译语法</h2><p>条件编译：用特殊的注释作为标记，在编译时根据这些注释，将注释的代码编译到不同的平台</p><p>写法：以#ifdef或ifndef开头+平台名，后面都要以#endif结尾</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#ifdef  :if defined仅在某平台存在
#ifndef :if not defined 除了某平台都存在
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>平台名：</p>`,8),Yn=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"值"),n("th",{style:{"text-align":"left"}},"生效条件")])],-1),Gn=n("td",{style:{"text-align":"left"}},"VUE3",-1),Zn={style:{"text-align":"left"}},ns={href:"https://ask.dcloud.net.cn/article/37834",target:"_blank",rel:"noopener noreferrer"},ss=n("tr",null,[n("td",{style:{"text-align":"left"}},"APP-PLUS"),n("td",{style:{"text-align":"left"}},"App")],-1),ts=n("tr",null,[n("td",{style:{"text-align":"left"}},"APP-PLUS-NVUE或APP-NVUE"),n("td",{style:{"text-align":"left"}},"App nvue")],-1),as=n("tr",null,[n("td",{style:{"text-align":"left"}},"H5"),n("td",{style:{"text-align":"left"}},"H5")],-1),es=n("tr",null,[n("td",{style:{"text-align":"left"}},"MP-WEIXIN"),n("td",{style:{"text-align":"left"}},"微信小程序")],-1),ps=e(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#ifdef H5 || MP-WEIXIN
xxx
#endif
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>支持的文件</strong></p><ul><li>.vue</li><li>.js</li><li>.css</li><li>pages.json</li><li>各预编译语言文件，如：.scss、.less、.stylus、.ts、.pug</li></ul><p><strong>注意：</strong></p><ul><li>条件编译是利用注释实现的，在不同语法里注释写法不一样，js使用 <code>// 注释</code>、css 使用 <code>/* 注释 */</code>、vue/nvue 模板里使用 <code>&lt;!-- 注释 --&gt;</code>；</li><li>条件编译APP-PLUS包含APP-NVUE和APP-VUE，APP-PLUS-NVUE和APP-NVUE没什么区别，为了简写后面出了APP-NVUE ；</li><li>使用条件编译请保证<code>编译前</code>和<code>编译后</code>文件的正确性，比如json文件中不能有多余的逗号；</li><li><code>VUE3</code> 需要在项目的 <code>manifest.json</code> 文件根节点配置 <code>&quot;vueVersion&quot; : &quot;3&quot;</code></li></ul><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span>
			<span class="token comment">&lt;!-- #ifdef H5 --&gt;</span>
			testtest
			<span class="token comment">&lt;!-- #endif --&gt;</span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
	<span class="token comment">// #ifndef APP-PLUS</span>
    consoloe<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;xxx&#39;</span><span class="token punctuation">)</span>
    <span class="token comment">// #endif</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">      scss的注释是//，但写条件编译的时候也要用<span class="token comment">/**/</span>
	<span class="token comment">/* #ifdef H5 */</span>
    <span class="token selector">.test</span><span class="token punctuation">{</span>
        <span class="token property">font-size</span><span class="token punctuation">:</span>16px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">/* #endif */</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>pages.json里也用//注释</p><h3 id="static目录的条件编译" tabindex="-1"><a class="header-anchor" href="#static目录的条件编译" aria-hidden="true">#</a> static目录的条件编译</h3><p>static目录下新建不同平台的专有目录（目录名同ifdef后的值，但字母都为小写）</p><h3 id="判断app端为ios还是android" tabindex="-1"><a class="header-anchor" href="#判断app端为ios还是android" aria-hidden="true">#</a> 判断APP端为ios还是Android</h3><p>uni.getSystemInfo(obj) 异步的</p><p>uni.getSystemInfoSync() 同步的</p><p>异步的需要在success函数里获取platform。同步的直接返回对象</p><p>platform：</p><p><strong>客户端平台，值域为：<code>ios</code>、<code>android</code>、<code>mac（3.1.10+）</code>、<code>windows（3.1.10+）</code>、<code>linux（3.1.10+）</code></strong></p><h2 id="px和rpx的动态计算" tabindex="-1"><a class="header-anchor" href="#px和rpx的动态计算" aria-hidden="true">#</a> px和rpx的动态计算</h2><p>px为屏幕像素</p><p>rpx为响应式px。以750的屏幕为基准，750rpx为屏幕宽度。</p><p>所需rpx=设计稿宽度*750/设备宽度</p><h2 id="css变量" tabindex="-1"><a class="header-anchor" href="#css变量" aria-hidden="true">#</a> CSS变量</h2><p>pages.json的页面里style设置navigationStyle：&quot;custom&quot;,头部导航栏就会消失。</p><p>如果在H5端想放个div在底部，要空出tabBar的高度，就要使用 --window-bottom</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">.height</span><span class="token punctuation">{</span>
    <span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span>
	<span class="token property">bottom</span><span class="token punctuation">:</span><span class="token function">var</span><span class="token punctuation">(</span>--window-bottom<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="template" tabindex="-1"><a class="header-anchor" href="#template" aria-hidden="true">#</a> &lt;template&gt;</h2><p>进行条件渲染或列表渲染时，用tempalte标签进行包裹，仅做包装元素，只接收控制属性，f12不会看到它的标签</p><h2 id="页面通讯" tabindex="-1"><a class="header-anchor" href="#页面通讯" aria-hidden="true">#</a> 页面通讯</h2><p>uni.$off一般在页面卸载时（onUnload）移除监听器。</p><h2 id="发送网络请求" tabindex="-1"><a class="header-anchor" href="#发送网络请求" aria-hidden="true">#</a> 发送网络请求</h2><p><strong>uni.request(obj)</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>uni<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;https://www.example.com/request&#39;</span><span class="token punctuation">,</span> <span class="token comment">//仅为示例，并非真实接口地址。</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;uni.request&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span><span class="token comment">//默认为get，method的值必须大写</span>
    <span class="token literal-property property">header</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&#39;custom-header&#39;</span><span class="token operator">:</span> <span class="token string">&#39;hello&#39;</span> <span class="token comment">//自定义请求头信息</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token string">&#39;request success&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">fail</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数据缓存" tabindex="-1"><a class="header-anchor" href="#数据缓存" aria-hidden="true">#</a> 数据缓存</h2>`,31),os={id:"uni-setstorage-object",tabindex:"-1"},ls=n("a",{class:"header-anchor",href:"#uni-setstorage-object","aria-hidden":"true"},"#",-1),is={href:"https://uniapp.dcloud.io/api/storage/storage?id=setstorage",target:"_blank",rel:"noopener noreferrer"},cs=e(`<p>将数据存储在本地缓存中指定的 key 中，会覆盖掉原来该 key 对应的内容，这是一个异步接口。</p><p><strong>OBJECT 参数说明</strong></p><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">类型</th><th style="text-align:left;">必填</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">key</td><td style="text-align:left;">String</td><td style="text-align:left;">是</td><td style="text-align:left;">本地缓存中的指定的 key</td></tr><tr><td style="text-align:left;">data</td><td style="text-align:left;">Any</td><td style="text-align:left;">是</td><td style="text-align:left;">需要存储的内容，只支持原生类型、及能够通过 JSON.stringify 序列化的对象</td></tr><tr><td style="text-align:left;">success</td><td style="text-align:left;">Function</td><td style="text-align:left;">否</td><td style="text-align:left;">接口调用成功的回调函数</td></tr><tr><td style="text-align:left;">fail</td><td style="text-align:left;">Function</td><td style="text-align:left;">否</td><td style="text-align:left;">接口调用失败的回调函数</td></tr><tr><td style="text-align:left;">complete</td><td style="text-align:left;">Function</td><td style="text-align:left;">否</td><td style="text-align:left;">接口调用结束的回调函数（调用成功、失败都会执行）</td></tr></tbody></table><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>uni<span class="token punctuation">.</span><span class="token function">setStorage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;storage_key&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),us={id:"uni-setstoragesync-key-data",tabindex:"-1"},rs=n("a",{class:"header-anchor",href:"#uni-setstoragesync-key-data","aria-hidden":"true"},"#",-1),ds={href:"https://uniapp.dcloud.io/api/storage/storage?id=setstoragesync",target:"_blank",rel:"noopener noreferrer"},ks=e(`<p>将 data 存储在本地缓存中指定的 key 中，会覆盖掉原来该 key 对应的内容，这是一个同步接口。</p><p><strong>参数说明</strong></p><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">必填</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">key</td><td style="text-align:left;">String</td><td style="text-align:left;">是</td><td style="text-align:left;">本地缓存中的指定的 key</td></tr><tr><td style="text-align:left;">data</td><td style="text-align:left;">Any</td><td style="text-align:left;">是</td><td style="text-align:left;">需要存储的内容，只支持原生类型、及能够通过 JSON.stringify 序列化的对象</td></tr></tbody></table><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
    uni<span class="token punctuation">.</span><span class="token function">setStorageSync</span><span class="token punctuation">(</span><span class="token string">&#39;storage_key&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// error</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),vs={id:"uni-getstorage-object",tabindex:"-1"},gs=n("a",{class:"header-anchor",href:"#uni-getstorage-object","aria-hidden":"true"},"#",-1),ms={href:"https://uniapp.dcloud.io/api/storage/storage?id=getstorage",target:"_blank",rel:"noopener noreferrer"},bs=e(`<p>从本地缓存中异步获取指定 key 对应的内容。</p><p><strong>OBJECT 参数说明</strong></p><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">类型</th><th style="text-align:left;">必填</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">key</td><td style="text-align:left;">String</td><td style="text-align:left;">是</td><td style="text-align:left;">本地缓存中的指定的 key</td></tr><tr><td style="text-align:left;">success</td><td style="text-align:left;">Function</td><td style="text-align:left;">是</td><td style="text-align:left;">接口调用的回调函数，res = {data: key对应的内容}</td></tr><tr><td style="text-align:left;">fail</td><td style="text-align:left;">Function</td><td style="text-align:left;">否</td><td style="text-align:left;">接口调用失败的回调函数</td></tr><tr><td style="text-align:left;">complete</td><td style="text-align:left;">Function</td><td style="text-align:left;">否</td><td style="text-align:left;">接口调用结束的回调函数（调用成功、失败都会执行）</td></tr></tbody></table><p><strong>success 返回参数说明</strong></p><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">data</td><td style="text-align:left;">Any</td><td style="text-align:left;">key 对应的内容</td></tr></tbody></table><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>uni<span class="token punctuation">.</span><span class="token function">getStorage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;storage_key&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),hs={id:"uni-getstoragesync-key",tabindex:"-1"},ys=n("a",{class:"header-anchor",href:"#uni-getstoragesync-key","aria-hidden":"true"},"#",-1),fs={href:"https://uniapp.dcloud.io/api/storage/storage?id=getstoragesync",target:"_blank",rel:"noopener noreferrer"},xs=e(`<p>从本地缓存中同步获取指定 key 对应的内容。</p><p><strong>参数说明</strong></p><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">必填</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">key</td><td style="text-align:left;">String</td><td style="text-align:left;">是</td><td style="text-align:left;">本地缓存中的指定的 key</td></tr></tbody></table><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> value <span class="token operator">=</span> uni<span class="token punctuation">.</span><span class="token function">getStorageSync</span><span class="token punctuation">(</span><span class="token string">&#39;storage_key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// error</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),_s={id:"uni-getstorageinfo-object",tabindex:"-1"},qs=n("a",{class:"header-anchor",href:"#uni-getstorageinfo-object","aria-hidden":"true"},"#",-1),js={href:"https://uniapp.dcloud.io/api/storage/storage?id=getstorageinfo",target:"_blank",rel:"noopener noreferrer"},ws=e(`<p>异步获取当前 storage 的相关信息。</p><p><strong>OBJECT 参数说明</strong></p><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">类型</th><th style="text-align:left;">必填</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">success</td><td style="text-align:left;">Function</td><td style="text-align:left;">是</td><td style="text-align:left;">接口调用的回调函数，详见返回参数说明</td></tr><tr><td style="text-align:left;">fail</td><td style="text-align:left;">Function</td><td style="text-align:left;">否</td><td style="text-align:left;">接口调用失败的回调函数</td></tr><tr><td style="text-align:left;">complete</td><td style="text-align:left;">Function</td><td style="text-align:left;">否</td><td style="text-align:left;">接口调用结束的回调函数（调用成功、失败都会执行）</td></tr></tbody></table><p><strong>success 返回参数说明</strong></p><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">keys</td><td style="text-align:left;">Array＜String＞</td><td style="text-align:left;">当前 storage 中所有的 key</td></tr><tr><td style="text-align:left;">currentSize</td><td style="text-align:left;">Number</td><td style="text-align:left;">当前占用的空间大小, 单位：kb</td></tr><tr><td style="text-align:left;">limitSize</td><td style="text-align:left;">Number</td><td style="text-align:left;">限制的空间大小, 单位：kb</td></tr></tbody></table><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>uni<span class="token punctuation">.</span><span class="token function">getStorageInfo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>keys<span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>currentSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>limitSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),Ss={id:"uni-getstorageinfosync",tabindex:"-1"},Bs=n("a",{class:"header-anchor",href:"#uni-getstorageinfosync","aria-hidden":"true"},"#",-1),Ts={href:"https://uniapp.dcloud.io/api/storage/storage?id=getstorageinfosync",target:"_blank",rel:"noopener noreferrer"},Cs=e(`<p>同步获取当前 storage 的相关信息。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> uni<span class="token punctuation">.</span><span class="token function">getStorageInfoSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>keys<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>currentSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>limitSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// error</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),Ps={id:"uni-removestorage-object",tabindex:"-1"},As=n("a",{class:"header-anchor",href:"#uni-removestorage-object","aria-hidden":"true"},"#",-1),Ns={href:"https://uniapp.dcloud.io/api/storage/storage?id=removestorage",target:"_blank",rel:"noopener noreferrer"},Fs=e(`<p>从本地缓存中异步移除指定 key。</p><p><strong>OBJECT 参数说明</strong></p><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">类型</th><th style="text-align:left;">必填</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">key</td><td style="text-align:left;">String</td><td style="text-align:left;">是</td><td style="text-align:left;">本地缓存中的指定的 key</td></tr><tr><td style="text-align:left;">success</td><td style="text-align:left;">Function</td><td style="text-align:left;">是</td><td style="text-align:left;">接口调用的回调函数</td></tr><tr><td style="text-align:left;">fail</td><td style="text-align:left;">Function</td><td style="text-align:left;">否</td><td style="text-align:left;">接口调用失败的回调函数</td></tr><tr><td style="text-align:left;">complete</td><td style="text-align:left;">Function</td><td style="text-align:left;">否</td><td style="text-align:left;">接口调用结束的回调函数（调用成功、失败都会执行）</td></tr></tbody></table><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>uni<span class="token punctuation">.</span><span class="token function">removeStorage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;storage_key&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),Hs={id:"uni-removestoragesync-key",tabindex:"-1"},Is=n("a",{class:"header-anchor",href:"#uni-removestoragesync-key","aria-hidden":"true"},"#",-1),Es={href:"https://uniapp.dcloud.io/api/storage/storage?id=removestoragesync",target:"_blank",rel:"noopener noreferrer"},Os=e(`<p>从本地缓存中同步移除指定 key。</p><p><strong>参数说明</strong></p><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">类型</th><th style="text-align:left;">必填</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">key</td><td style="text-align:left;">String</td><td style="text-align:left;">是</td><td style="text-align:left;">本地缓存中的指定的 key</td></tr></tbody></table><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
    uni<span class="token punctuation">.</span><span class="token function">removeStorageSync</span><span class="token punctuation">(</span><span class="token string">&#39;storage_key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// error</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),Ls={id:"uni-clearstorage",tabindex:"-1"},Js=n("a",{class:"header-anchor",href:"#uni-clearstorage","aria-hidden":"true"},"#",-1),Us={href:"https://uniapp.dcloud.io/api/storage/storage?id=clearstorage",target:"_blank",rel:"noopener noreferrer"},Ds=e(`<p>清理本地数据缓存。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>uni<span class="token punctuation">.</span><span class="token function">clearStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2),Rs={id:"uni-clearstoragesync",tabindex:"-1"},Vs=n("a",{class:"header-anchor",href:"#uni-clearstoragesync","aria-hidden":"true"},"#",-1),Ms={href:"https://uniapp.dcloud.io/api/storage/storage?id=clearstoragesync",target:"_blank",rel:"noopener noreferrer"},zs=e(`<p>同步清理本地数据缓存。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
    uni<span class="token punctuation">.</span><span class="token function">clearStorageSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// error</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意</strong></p><p>uni-app的Storage在不同端的实现不同：</p><ul><li>H5端为localStorage，浏览器限制5M大小，是缓存概念，可能会被清理</li><li>App端为原生的plus.storage，无大小限制，不是缓存，是持久化的</li><li>各个小程序端为其自带的storage api，数据存储生命周期跟小程序本身一致，即除用户主动删除或超过一定时间被自动清理，否则数据都一直可用。</li><li>微信小程序单个 key 允许存储的最大数据长度为 1MB，所有数据存储上限为 10MB。</li><li>非App平台清空Storage会导致uni.getSystemInfo获取到的deviceId改变</li></ul><p>除此之外，其他数据存储方案：</p><ul><li>H5端还支持websql、indexedDB、sessionStorage</li></ul><h2 id="混入文件mixin" tabindex="-1"><a class="header-anchor" href="#混入文件mixin" aria-hidden="true">#</a> 混入文件mixin</h2><h3 id="全局混入" tabindex="-1"><a class="header-anchor" href="#全局混入" aria-hidden="true">#</a> 全局混入</h3><p>在main.js中：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> mixin <span class="token keyword">from</span> <span class="token string">&#39;./common/mixin/mixin.js&#39;</span>
Vue<span class="token punctuation">.</span><span class="token function">mixin</span><span class="token punctuation">(</span>mixin<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="局部混入" tabindex="-1"><a class="header-anchor" href="#局部混入" aria-hidden="true">#</a> 局部混入</h3><p>在xxx.vue中：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> mixin <span class="token keyword">from</span> <span class="token string">&#39;../mixins/mixin&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">mixins</span><span class="token operator">:</span> <span class="token punctuation">[</span>mixin<span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">mixinMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="背景色渐变" tabindex="-1"><a class="header-anchor" href="#背景色渐变" aria-hidden="true">#</a> 背景色渐变</h2><p>background-image: linear-gradient(red,#fff)</p><p>background-image: linear-gradient(red 30%,#fff) 还可以设置百分比</p><p>background-image: linear-gradient(to right,red,#fff) 从左到右</p><h2 id="文字过长自动隐藏并显示省略号" tabindex="-1"><a class="header-anchor" href="#文字过长自动隐藏并显示省略号" aria-hidden="true">#</a> 文字过长自动隐藏并显示省略号</h2><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.text</span> <span class="token punctuation">{</span>
            <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>
            <span class="token property">line-height</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
    
          //========================
            <span class="token property">display</span><span class="token punctuation">:</span> -webkit-box<span class="token punctuation">;</span>	
            <span class="token property">-webkit-box-orient</span><span class="token punctuation">:</span> vertical<span class="token punctuation">;</span>	
            <span class="token property">-webkit-line-clamp</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>    //限制行数，自动出现省略号.它只有在 display 属性设置成 -webkit-box 或者 -webkit-inline-box 
    							//并且 -webkit-box-orient 属性设置成 vertical时才有效果
            <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
    	//============================
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="隐藏滚动条" tabindex="-1"><a class="header-anchor" href="#隐藏滚动条" aria-hidden="true">#</a> 隐藏滚动条</h2><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.hiddenBar ::webkit-scrollbar</span><span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span>0 <span class="token important">!important</span><span class="token punctuation">;</span>  //h5
    <span class="token property">height</span><span class="token punctuation">:</span>0 !impotant<span class="token punctuation">;</span>   //h5
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22),Qs={href:"https://blog.csdn.net/sdta25196/article/details/74908598",target:"_blank",rel:"noopener noreferrer"},$s=e(`<h2 id="解决h5端的跨域问题" tabindex="-1"><a class="header-anchor" href="#解决h5端的跨域问题" aria-hidden="true">#</a> 解决H5端的跨域问题</h2><p>在manifest.json中配置h5.devServer.proxy解决：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;h5&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;devServer&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
			<span class="token property">&quot;proxy&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
				<span class="token property">&quot;/api&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
					<span class="token property">&quot;target&quot;</span><span class="token operator">:</span><span class="token string">&quot;http://127.0.0.1:8080&quot;</span><span class="token punctuation">,</span>
					<span class="token property">&quot;pathRewrite&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
						<span class="token property">&quot;^/api&quot;</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
                          <span class="token property">&quot;changeOrigin&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//是否跨域</span>
                          <span class="token property">&quot;secure&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token comment">// 设置支持https协议的代理</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以在根目录下创建vue.config.js</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports<span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token literal-property property">devServer</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token literal-property property">proxy</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token string-property property">&quot;/api&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token literal-property property">target</span><span class="token operator">:</span><span class="token string">&#39;xxxx&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">pathRewrite</span><span class="token operator">:</span><span class="token punctuation">{</span>
                    <span class="token string-property property">&#39;^/api&#39;</span><span class="token operator">:</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">changeOrigin</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//是否跨域</span>
                    <span class="token literal-property property">secure</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token comment">// 设置支持https协议的代理</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>两种方案不能同时使用，第一种会覆盖第二种</p><h2 id="下拉刷新" tabindex="-1"><a class="header-anchor" href="#下拉刷新" aria-hidden="true">#</a> 下拉刷新</h2><p>当处理完数据时，调用uni.stopPullDownRefresh可以停止页面的下拉刷新。</p><p>uni.startPullDownRefresh调用触发下拉刷新动画，和用户手动效果一致。</p>`,9);function Ws(Ks,Xs){const t=o("ExternalLinkIcon");return l(),i("div",null,[k,n("p",null,[v,s(" 如果调用了 "),n("a",g,[s("uni.preloadPage(OBJECT)"),a(t)]),s(" 不会关闭，仅触发生命周期 "),m]),b,h,y,n("p",null,[f,s(" 如果调用了 "),n("a",x,[s("uni.preloadPage(OBJECT)"),a(t)]),s(" 不会关闭，仅触发生命周期 "),_]),q,n("p",null,[s("可以在onLaunch里进行网络状态的监听。"),n("a",j,[s("网络状态 - uni-app官网 (dcloud.io)"),a(t)])]),w,n("p",null,[S,s(" 如果调用了 "),n("a",B,[s("uni.preloadPage(OBJECT)"),a(t)]),s(" 不会关闭，仅触发生命周期 "),T]),C,P,A,n("p",null,[N,s(" 如果调用了 "),n("a",F,[s("uni.preloadPage(OBJECT)"),a(t)]),s(" 不会关闭，仅触发生命周期 "),H]),I,n("p",null,[s("可以在onLaunch里进行网络状态的监听。"),n("a",E,[s("网络状态 - uni-app官网 (dcloud.io)"),a(t)])]),O,n("table",null,[L,n("tbody",null,[n("tr",null,[J,n("td",U,[s("监听页面加载，其参数为上个页面传递的数据，参数类型为 Object（用于页面传参），参考"),n("a",D,[s("示例"),a(t)])]),R]),V,M,z,Q,$,n("tr",null,[W,n("td",K,[s("监听用户下拉动作，一般用于下拉刷新，参考"),n("a",X,[s("示例"),a(t)])]),Y]),G,Z,nn,sn,tn,n("tr",null,[an,n("td",en,[s("监听页面返回，返回 event = {from:backbutton、 navigateBack} ，backbutton 表示来源是左上角返回按钮或 android 返回键；navigateBack表示来源是 uni.navigateBack ；详细说明及使用："),n("a",pn,[s("onBackPress 详解"),a(t)]),s("。支付宝小程序只有真机能触发，只能监听非navigateBack引起的返回，不可阻止默认行为。")]),on]),ln,cn,un,rn,dn])]),kn,vn,n("table",null,[gn,n("tbody",null,[n("tr",null,[mn,n("td",bn,[s("在实例初始化之后被调用。"),n("a",hn,[s("详见"),a(t)])]),yn]),n("tr",null,[fn,n("td",xn,[s("在实例创建完成后被立即调用。"),n("a",_n,[s("详见"),a(t)])]),qn]),n("tr",null,[jn,n("td",wn,[s("在挂载开始之前被调用。"),n("a",Sn,[s("详见"),a(t)])]),Bn]),n("tr",null,[Tn,n("td",Cn,[s("挂载到实例上去之后调用。"),n("a",Pn,[s("详见"),a(t)]),s(" 注意：此处并不能确定子组件被全部挂载，如果需要子组件完全挂载之后在执行操作可以使用"),An,n("a",Nn,[s("Vue官方文档"),a(t)])]),Fn]),n("tr",null,[Hn,n("td",In,[s("数据更新时调用，发生在虚拟 DOM 打补丁之前。"),n("a",En,[s("详见"),a(t)])]),On]),n("tr",null,[Ln,n("td",Jn,[s("由于数据更改导致的虚拟 DOM 重新渲染和打补丁，在这之后会调用该钩子。"),n("a",Un,[s("详见"),a(t)])]),Dn]),n("tr",null,[Rn,n("td",Vn,[s("实例销毁之前调用。在这一步，实例仍然完全可用。"),n("a",Mn,[s("详见"),a(t)])]),zn]),n("tr",null,[Qn,n("td",$n,[s("Vue 实例销毁后调用。调用后，Vue 实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁。"),n("a",Wn,[s("详见"),a(t)])]),Kn])])]),Xn,n("table",null,[Yn,n("tbody",null,[n("tr",null,[Gn,n("td",Zn,[s("HBuilderX 3.2.0+ "),n("a",ns,[s("详情"),a(t)])])]),ss,ts,as,es])]),ps,n("h4",os,[ls,s(),n("a",is,[s("uni.setStorage(OBJECT)"),a(t)])]),cs,n("h4",us,[rs,s(),n("a",ds,[s("uni.setStorageSync(KEY,DATA)"),a(t)])]),ks,n("h4",vs,[gs,s(),n("a",ms,[s("uni.getStorage(OBJECT)"),a(t)])]),bs,n("h4",hs,[ys,s(),n("a",fs,[s("uni.getStorageSync(KEY)"),a(t)])]),xs,n("h4",_s,[qs,s(),n("a",js,[s("uni.getStorageInfo(OBJECT)"),a(t)])]),ws,n("h4",Ss,[Bs,s(),n("a",Ts,[s("uni.getStorageInfoSync()"),a(t)])]),Cs,n("h4",Ps,[As,s(),n("a",Ns,[s("uni.removeStorage(OBJECT)"),a(t)])]),Fs,n("h4",Hs,[Is,s(),n("a",Es,[s("uni.removeStorageSync(KEY)"),a(t)])]),Os,n("h4",Ls,[Js,s(),n("a",Us,[s("uni.clearStorage()"),a(t)])]),Ds,n("h4",Rs,[Vs,s(),n("a",Ms,[s("uni.clearStorageSync()"),a(t)])]),zs,n("p",null,[n("a",Qs,[s("css之-webkit-scrollbar 浏览器滚动条_CSDN官方合作博客-CSDN博客"),a(t)])]),$s])}const Gs=p(d,[["render",Ws],["__file","uni-app.html.vue"]]);export{Gs as default};
