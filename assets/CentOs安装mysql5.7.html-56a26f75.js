import{_ as e,o as s,c as a,e as t}from"./app-7863bad7.js";const i="/xjblog/assets/image-20220520112136394-1d7abade.png",d="/xjblog/assets/image-20220520112516635-a4f930af.png",n={},l=t(`<h1 id="centos安装mysql-5-7" tabindex="-1"><a class="header-anchor" href="#centos安装mysql-5-7" aria-hidden="true">#</a> CentOS安装mysql 5.7</h1><p>由于CentOS 的yum源中没有mysql，需要到mysql的官网下载yum Repository配置文件。</p><p>跟着无脑执行就行！！！</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>wget -i -c http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yum -y install mysql57-community-release-el7-10.noarch.rpm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yum -y install mysql-community-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>看到替代：mariadb-....就代表安装完毕了。</p><p>原本执行第三个命令时，在我第一台服务器是可以直接安装成功的。但是这一次却失败了，</p><p>报错：</p><p>Public key for mysql-community-libs-compat-5.7.38-1.el7.x86_64.rpm is not installed</p><p>Failing package is: mysql-community-libs-compat-5.7.38-1.el7.x86_64 GPG Keys are configured as: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</p><p><strong>原因是Mysql的GPG升级了，需要重新获取</strong></p><p>使用以下命令即可</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>再次执行第三个安装指令，发现成功安装：</p><p>Dependency Installed: mysql-community-client.x86_64 0:5.7.38-1.el7 mysql-community-common.x86_64 0:5.7.38-1.el7</p><p>Replaced: mariadb-libs.x86_64 1:5.5.68-1.el7</p><p>然后进行数据库的设置。</p><h2 id="_1、mysql数据库设置" tabindex="-1"><a class="header-anchor" href="#_1、mysql数据库设置" aria-hidden="true">#</a> 1、mysql数据库设置</h2><p>首先启动MySQL</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>systemctl start  mysqld.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看MySQL运行状态</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>systemctl status mysqld.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>通过如下命令可以在日志文件中找出mysql初始密码：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>grep &quot;password&quot; /var/log/mysqld.log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>[Note] A temporary password is generated for root@localhost: <strong>us?gJ3T5L:4W</strong></p><p>最后的就是初始密码。</p><p>进入数据库：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>mysql -uroot -p
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改密码：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>mysql&gt; ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;new password&#39;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中‘new password’替换成你要设置的密码，注意:密码设置必须要大小写字母数字和特殊符号（,/&#39;;:等）,不然不能配置成功。如果出错，可能是密码位数太少。</p><h2 id="_2、-开启mysql的远程访问" tabindex="-1"><a class="header-anchor" href="#_2、-开启mysql的远程访问" aria-hidden="true">#</a> 2、 开启mysql的远程访问</h2><p>执行以下命令开启远程访问限制（注意：下面命令开启的IP是 192.168.0.1，如要开启所有的，用%代替IP）：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>grant all privileges on *.* to &#39;root&#39;@&#39;192.168.0.1&#39; identified by &#39;password&#39; with grant option;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后再输入下面两行命令，</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>flush privileges;      //刷新权限
exit;             //退出
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后可以通过cmd来测试连接数据库：测试前，记得先打开云服务器的安全组或防火墙的3306端口</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>mysql -h xxx(云服务器公网ip) -P 3306(端口号) -u root(赋权的用户名) -p
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>以上命令中，</p><p><strong>ALL PRIVILEGES ON 后面的*.*表示所有数据库，即完全访问权限，可以指定为特定数据库。</strong></p><p><strong>to后的&#39;root&#39;为用户名，&#39;192.168.0.1&#39;为可远程访问的IP，如果要开启全部，则用%代替(不推荐，不安全)。</strong>（192.168.0.1为内网IP，应该只有同一局域网下，才能通过这个ip访问）</p><p><strong>内网ip通过cmd输入ipconfig可查看，公网ip百度直接搜索ip就可以查到。如果不是同一局域网，又想远程连接数据库，就要给公网IP赋予权限。如果查不到，直接通过命令行尝试远程访问，它也会返回告诉你Host xxx 不被允许访问</strong></p><p><strong>以上所有操作，其实就是在mysql库的user表，添加了一条新的记录，相应的：</strong><strong>Host=特定ip，User=允许登录的用户名，Password=密码 等等。</strong></p><p><strong>比如：允许来自192.168.0.1的连接并使用aiphare账户和by后面的密码进行访问。</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>grant all privileges on wechat.* to aiphare@localhost identified by &#39;123456&#39;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意:其中localhost表示可以本地访问**(不知道这个例子aiphare和localhost漏掉单引号有没有影响，保险起见还是都加上)**,</p><p>wechat是你要赋予的数据库名,如果改为*表示全部的数据库。wechat后面的星号应该是所有表的意思。</p><p><strong>查看用户权限</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>show grants for &#39;username&#39;@&#39;%&#39;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>@后面是什么ip，搜索的时候就是什么ip，用%是查不到的，只有赋予权限的时候是%才能用%查出来。</p><p><strong>查看所有用户权限</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>select user,host from mysql.user;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>删除用户</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>drop user &#39;username&#39;@&#39;%&#39;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="为防火墙开放端口-非必须步骤" tabindex="-1"><a class="header-anchor" href="#为防火墙开放端口-非必须步骤" aria-hidden="true">#</a> 为防火墙开放端口（非必须步骤）</h2><p>如果云服务器安全组开启了3306端口还是无法访问，可以尝试一下在centos里开启。</p><p>添加mysql端口3306和Tomcat端口8080</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>firewall-cmd --zone=public --add-port=3306/tcp --permanent
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>firewall-cmd --zone=public --add-port=8080/tcp --permanent
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>firewall-cmd --zone=public --list-ports 查看防火墙开放的端口
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>重启：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>firewall-cmd --reload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果提示FierewallD is not running,则通过命令行开启防火墙</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>systemctl start firewalld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后查看防火墙状态，最后再尝试连接</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>systemctl status firewalld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3、更改mysql的语言" tabindex="-1"><a class="header-anchor" href="#_3、更改mysql的语言" aria-hidden="true">#</a> 3、更改mysql的语言</h2><p>进入mysql，执行：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>status;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+i+`" alt="image-20220520112136394"></p><p>可以看到，绿色箭头处不是utf-8</p><p>因此我们先退出mysql，然后再到/etc目录下的my.cnf文件下修改一下文件内容。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>vi /etc/my.cnf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>进入文件后，新增四行代码：</p><p><img src="`+d+`" alt="image-20220520112516635"></p><p><strong>vi编辑：</strong></p><p><strong>按下i键进入编辑模式。</strong></p><p><strong>ESC后：wq！保存后退出</strong></p><p><strong>ESC后：q！不保存退出</strong></p><p>保存更改后的my.cnf文件后，重启下mysql</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>service mysqld restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后进入mysql，输入status再次查看，发现修改成功。</p>`,83),r=[l];function c(p,o){return s(),a("div",null,r)}const u=e(n,[["render",c],["__file","CentOs安装mysql5.7.html.vue"]]);export{u as default};
