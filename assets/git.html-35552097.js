import{_ as n,o as a,c as s,e}from"./app-6fcf50f1.js";const i={},t=e(`<h2 id="版本与更新" tabindex="-1"><a class="header-anchor" href="#版本与更新" aria-hidden="true">#</a> 版本与更新</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> <span class="token parameter variable">--version</span> <span class="token comment">#查看版本</span>

<span class="token comment">#更新</span>
<span class="token function">git</span> update <span class="token comment">#2.17.1之前使用</span>
<span class="token function">git</span> update-git-for-windows <span class="token comment">#2.17.1之后</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置用户信息" tabindex="-1"><a class="header-anchor" href="#配置用户信息" aria-hidden="true">#</a> 配置用户信息</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">&#39;your name&#39;</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">&#39;email@example.com&#39;</span> <span class="token comment">#写的时候加不加引号都没区别</span>

<span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--unset</span> user.name <span class="token comment">#清除用户名</span>

<span class="token function">git</span> config <span class="token parameter variable">--list</span> <span class="token comment">#查看</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ssh-key" tabindex="-1"><a class="header-anchor" href="#ssh-key" aria-hidden="true">#</a> SSH Key</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> <span class="token string">&#39;youremail@example.com&#39;</span> <span class="token comment"># 创建ssh key，会告诉你保存路径</span>
<span class="token comment"># 创建成功路径里会多两个文件，id_rsa(私钥),id_rsa.pub(公钥),打开公钥，复制里面的内容到git或gitee里的ssh公钥信息</span>
<span class="token comment"># (C:\\Users\\Admin/.ssh/id_rsa)</span>

<span class="token function">ssh</span> <span class="token parameter variable">-T</span> git@gitee.com  <span class="token comment"># 测试ssh key配对</span>
<span class="token function">ssh</span> <span class="token parameter variable">-T</span> git@github.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="仓库" tabindex="-1"><a class="header-anchor" href="#仓库" aria-hidden="true">#</a> 仓库</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> init <span class="token comment"># 在当前目录新建一个git代码仓库</span>

<span class="token function">git</span> init <span class="token punctuation">[</span>dir<span class="token punctuation">]</span> <span class="token comment"># 新建一个目录，并新建git仓库</span>

<span class="token function">git</span> clone <span class="token punctuation">[</span>url<span class="token punctuation">]</span> <span class="token comment"># 下载一个项目和它全部代码历史</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="增加-删除文件到暂存区" tabindex="-1"><a class="header-anchor" href="#增加-删除文件到暂存区" aria-hidden="true">#</a> 增加/删除文件到暂存区</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> <span class="token function">add</span> <span class="token punctuation">[</span>file1<span class="token punctuation">]</span> <span class="token punctuation">[</span>file2<span class="token punctuation">]</span> <span class="token punctuation">..</span>. <span class="token comment"># 添加指定文件到暂存区</span>
<span class="token function">git</span> <span class="token function">add</span> <span class="token punctuation">[</span>dir<span class="token punctuation">]</span> <span class="token comment"># 添加指定目录到暂存区，包括子目录</span>
<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span> <span class="token comment"># 添加当前目录所有文件到暂存区</span>

<span class="token comment"># 如果在git add 时提示warning：LF will be replaced by CRLF in ...,表示待添加到暂存区的文件中存在LF换行符（linux），CRLF也是一种换行符（windows）,在commit时会进行转换</span>
<span class="token comment"># 如果是多平台开发，就不管它</span>
<span class="token comment"># 如果是纯windows开发， git config --global core.autocrlf false 把自动转换关闭就不会提示</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查看仓库状态" tabindex="-1"><a class="header-anchor" href="#查看仓库状态" aria-hidden="true">#</a> 查看仓库状态</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> status <span class="token comment"># 查看工作区中文件的状态</span>
<span class="token comment"># 输入代码后展示的信息如果是绿色，代表修改了且加入了暂存区</span>
<span class="token comment"># 如果是红色代表修改了，但没加入暂存区</span>
<span class="token comment"># new file是新增的文件、modified是修改的文件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="代码提交" tabindex="-1"><a class="header-anchor" href="#代码提交" aria-hidden="true">#</a> 代码提交</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token punctuation">[</span>message<span class="token punctuation">]</span> <span class="token comment"># 提交暂存区到仓库区，形成版本</span>
<span class="token function">git</span> commit <span class="token parameter variable">-a</span> <span class="token parameter variable">-m</span> <span class="token punctuation">[</span>message<span class="token punctuation">]</span> <span class="token comment"># 跳过加入缓存区的步骤，直接形成版本</span>

<span class="token function">git</span> commit <span class="token parameter variable">--amend</span> <span class="token parameter variable">-m</span> <span class="token punctuation">[</span>message<span class="token punctuation">]</span> <span class="token comment"># 本次提交会合并当前分支的最新提交</span>
<span class="token function">git</span> commit <span class="token parameter variable">--amend</span> --no-edit <span class="token comment"># 提交到上一个commit，不修改描述信息</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查看仓库版本" tabindex="-1"><a class="header-anchor" href="#查看仓库版本" aria-hidden="true">#</a> 查看仓库版本</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> log <span class="token comment"># 查看版本历史</span>
<span class="token function">git</span> log <span class="token parameter variable">--oneline</span> <span class="token comment"># 只显示简单的版本号和版本提交信息</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="版本回退" tabindex="-1"><a class="header-anchor" href="#版本回退" aria-hidden="true">#</a> 版本回退</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> reset <span class="token comment"># 清空暂存区</span>
<span class="token function">git</span> reset <span class="token parameter variable">--hard</span> <span class="token comment"># 清空暂存区和工作区，恢复到上一次commit</span>

<span class="token function">git</span> reset <span class="token parameter variable">--hard</span> <span class="token punctuation">[</span>commit版本号<span class="token punctuation">]</span> <span class="token comment"># 重置暂存区和工作区，与指定commit一致</span>

<span class="token function">git</span> reset <span class="token parameter variable">--hard</span> Head~0 <span class="token comment"># 回退到最后的commit(倒数第一)，跟git reset --hard一样</span>
<span class="token function">git</span> reset <span class="token parameter variable">--hard</span> Head~1 <span class="token comment"># 回退到倒数第二个commit</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> revert <span class="token punctuation">[</span>commit版本号<span class="token punctuation">]</span> <span class="token comment"># 撤销重做该版本，也是回退到某个版本（得注意是回退到该版本commit前的内容）,修改内容后commit</span>
<span class="token comment"># 比如版本历史是1、2、3、4，</span>
<span class="token number">1</span>：1  
<span class="token number">2</span>：1，2    <span class="token comment"># 为节约空间，后面逗号表内容换行</span>
<span class="token number">3</span>：1，2，3
<span class="token number">4</span>：1，2，3，4

<span class="token comment"># revert到3那个版本，可以看到它冲突对比的是3版本提交前的内容，其实就是2版本</span>
<span class="token number">1</span>
<span class="token number">2</span>
<span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;</span> HEAD
<span class="token number">3</span>
<span class="token number">4</span>
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parent of f9fc06f <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>

<span class="token comment"># 解决冲突或bug后重新add 和 commit会在当前分支增加一条commit</span>

<span class="token comment"># 不想改了可以 git revert --abort 取消</span>

<span class="token comment"># 内容修改成 1，2，789。进行commit ‘check revert’</span>
<span class="token comment"># 版本历史就变成了 1、2、3、4、check revert ，如果是用的reset就会变成1、2、check revert,且会影响3、4版本中新增的内容</span>
<span class="token comment"># 如果我们这时再reset到3或者4版本，我们可以看到该文件内容是我们最新修改的</span>
<span class="token number">1</span>，2，789
<span class="token comment"># 文件处于红色modified,在编辑器里对比仍可以看到版本3或4的旧内容</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>git revert、git reset都能完成Git 记录回退代码的目的</p></li><li><p>git revert相当于新增一条Git记录，不会消除已存在的记录</p></li><li><p>git reset会消除存在的记录，并且push至远程需要强制推送；多人协同时，在回退期间并不能保证其他人有没有提交过代码，所以强制推送是有风险的，它容易覆盖掉其他人提交的代码</p></li></ul><h2 id="回看全部版本操作" tabindex="-1"><a class="header-anchor" href="#回看全部版本操作" aria-hidden="true">#</a> 回看全部版本操作</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> reflog <span class="token comment"># 可查看历史操作。有时用了版本回退，忘了最新的commit的版本号，这里也能看到</span>
<span class="token function">git</span> reflog <span class="token parameter variable">-5</span> <span class="token comment"># 只显示近五条</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="分支" tabindex="-1"><a class="header-anchor" href="#分支" aria-hidden="true">#</a> 分支</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> branch  <span class="token comment"># 查看所有本地分支</span>
<span class="token function">git</span> branch <span class="token parameter variable">-a</span> <span class="token comment"># 查看所有分支（包括远程分支）</span>
<span class="token function">git</span> branch <span class="token parameter variable">-r</span> <span class="token comment"># 查看所有远程分支</span>
<span class="token function">git</span> branch <span class="token parameter variable">-vv</span> <span class="token comment"># 查看本地分支及其与远程分支的关联关系</span>


<span class="token function">git</span> branch <span class="token punctuation">[</span>branch-name<span class="token punctuation">]</span> <span class="token comment"># 新建一个分支，但依然停留在当前分支</span>
<span class="token function">git</span> branch <span class="token parameter variable">-d</span> <span class="token punctuation">[</span>branch-name<span class="token punctuation">]</span> <span class="token comment"># 删除分支</span>
<span class="token function">git</span> branch <span class="token punctuation">[</span>branch<span class="token punctuation">]</span> <span class="token punctuation">[</span>commit<span class="token punctuation">]</span> <span class="token comment"># 新建一个分支，指向指定commit</span>
<span class="token function">git</span> checkout <span class="token punctuation">[</span>branch<span class="token punctuation">]</span> <span class="token comment"># 切换到某分支</span>
<span class="token function">git</span> checkout <span class="token parameter variable">-b</span> <span class="token punctuation">[</span>branch<span class="token punctuation">]</span> <span class="token comment"># 新建一个分支，并切换到该分支</span>
<span class="token function">git</span> branch <span class="token parameter variable">--track</span> <span class="token punctuation">[</span>branch<span class="token punctuation">]</span> <span class="token punctuation">[</span>remote-branch<span class="token punctuation">]</span> <span class="token comment"># 新建一个分支，与指定的远程分支建立追踪关系</span>
<span class="token function">git</span> branch --set-upstream <span class="token punctuation">[</span>branch<span class="token punctuation">]</span> <span class="token punctuation">[</span>remote-branch<span class="token punctuation">]</span> <span class="token comment"># 在本地分支和指定远程分支建立追踪关系</span>

<span class="token function">git</span> merge <span class="token punctuation">[</span>branch<span class="token punctuation">]</span> <span class="token comment"># 合并指定分支到当前分支</span>
<span class="token function">git</span> cherry-pick <span class="token punctuation">[</span>commit<span class="token punctuation">]</span> <span class="token comment"># 选择一个commit，合并进当前分支 ？？</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="远程仓库联动" tabindex="-1"><a class="header-anchor" href="#远程仓库联动" aria-hidden="true">#</a> 远程仓库联动</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> remote <span class="token function">add</span> <span class="token punctuation">[</span>shortname<span class="token punctuation">]</span> <span class="token punctuation">[</span>url<span class="token punctuation">]</span> <span class="token comment"># 与远程仓库进行链接，并给一个shortname来标识远程仓库名，一般为origin</span>
<span class="token function">git</span> remote <span class="token function">rm</span> <span class="token punctuation">[</span>shortname<span class="token punctuation">]</span>  <span class="token comment"># 删除与远程仓库的链接</span>
<span class="token function">git</span> remote <span class="token parameter variable">-v</span> <span class="token comment"># 查看所有远程仓库</span>
<span class="token function">git</span> pull <span class="token punctuation">[</span>remote<span class="token punctuation">]</span> <span class="token punctuation">[</span>branch<span class="token punctuation">]</span> <span class="token comment"># 取回远程仓库的变化，并与本地分支合并</span>
<span class="token function">git</span> push <span class="token punctuation">[</span>remote<span class="token punctuation">]</span> <span class="token punctuation">[</span>branch<span class="token punctuation">]</span> <span class="token comment"># 上传本地指定分支到远程仓库  git push -u origin dev 推送到远程的dev分支</span>
<span class="token function">git</span> push <span class="token punctuation">[</span>remote<span class="token punctuation">]</span> <span class="token parameter variable">--all</span> <span class="token comment"># 推送所有分支到远程仓库</span>

<span class="token function">git</span> push origin <span class="token parameter variable">--delete</span> <span class="token punctuation">[</span>branch-name<span class="token punctuation">]</span> <span class="token comment"># 删除远程分支</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>要在Git中切换到远程的<code>dev</code>分支，你可以使用以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout origin/dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者使用较新的命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> switch origin/dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这将使你切换到名为<code>origin/dev</code>的远程分支。请注意，<strong>这只是将你的本地HEAD指针移到远程分支的位置，你仍然需要创建一个本地分支来跟踪远程分支</strong>。你可以使用以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout <span class="token parameter variable">-b</span> dev origin/dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者使用：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> switch <span class="token parameter variable">-c</span> dev origin/dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这将创建一个名为<code>dev</code>的本地分支，并将其设置为跟踪<code>origin/dev</code>。</p><h2 id="合并冲突" tabindex="-1"><a class="header-anchor" href="#合并冲突" aria-hidden="true">#</a> 合并冲突</h2><p>多人协同开发时，容易对同一文件进行操作，合并时就会产生冲突</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span> <span class="token constant">HEAD</span>
<span class="token number">123</span>
<span class="token operator">===</span><span class="token operator">===</span><span class="token operator">=</span>
<span class="token number">456</span>
<span class="token operator">&gt;&gt;&gt;</span><span class="token operator">&gt;&gt;&gt;</span><span class="token operator">&gt;</span> another      <span class="token comment">//通常以这种形式对两个分支的内容进行分隔</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对内容进行取舍后，重新add和commit即可</p><h2 id="忽略文件配置" tabindex="-1"><a class="header-anchor" href="#忽略文件配置" aria-hidden="true">#</a> 忽略文件配置</h2><p>在.git文件夹同级目录下新建文件.gitignore,用于设置忽略追踪的文件</p><p>配置语法：</p><ul><li>以斜杠&quot;/&quot;开头表示目录</li><li>一个星号&quot;*&quot;通配多个字符</li><li>两个星号&quot; ** &quot; 匹配任意中间目录, 比如a/**/z 可以匹配 a/z, a/b/z 或 a/b/c/z等</li><li>以问号&quot;?&quot;通配单个字符</li><li>以中括号&quot;[]&quot;包含单个字符的匹配列表</li><li>以感叹号&quot;!&quot;表示不忽略（即需要跟踪）匹配到的文件或目录</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 表注释，会被git忽略</span>
fd1/*   <span class="token comment">#忽略目录fd1下全部内容；无论是根目录/fd1/,还是某个子目录/child/fd1/</span>
/fd1/*  <span class="token comment">#忽略根目录下的/fd1/目录全部内容</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="git的优化" tabindex="-1"><a class="header-anchor" href="#git的优化" aria-hidden="true">#</a> git的优化</h2><p>假设版本1中有文件a，</p><p>版本2中有文件a、b、c，而a是并未修改过的，版本2里是有a、b、c文件的信息的</p><p>但只是把a文件的链接存储在版本2中，a文件真正存储的地方还是在版本1。</p><p>只有真正被改动的文件才会被存储，其他只是存储一个链接</p><h2 id="pull或push失败" tabindex="-1"><a class="header-anchor" href="#pull或push失败" aria-hidden="true">#</a> pull或push失败</h2><h3 id="fatal-unable-to-access-xxx-recv-failure-connection-was-reset" tabindex="-1"><a class="header-anchor" href="#fatal-unable-to-access-xxx-recv-failure-connection-was-reset" aria-hidden="true">#</a> fatal: unable to access ‘XXX‘: Recv failure: Connection was reset</h3><p>git:上传代码时，出现上述标题</p><p>提交代码的命令行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--unset</span> https.proxy
<span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--unset</span> http.proxy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>cmd:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ipconfig /flushdns
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>重新提交即可</p><h3 id="failure-when-receiving-data-from-the-peer" tabindex="-1"><a class="header-anchor" href="#failure-when-receiving-data-from-the-peer" aria-hidden="true">#</a> Failure when receiving data from the peer</h3><p>拉取代码时提示上述标题或下面，多半是开过vpn时拉取代码，挂着vpn清除缓存再拉即可</p><p><strong>Failed to connect to github.com port 443 after 21092 ms: Couldn&#39;t connect to server</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ipconfig /flushdns
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>还不行就把代理关了，执行最上面的那两条命令行再flushdns</p><p>如果上述还不行，还有最后一种方式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 注意修改成自己的IP和端口号,不确定可以在 网络和Internet–&gt;代理–&gt;手动设置代理–&gt;编辑 下查看</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> http.proxy http://127.0.0.1:7890 
<span class="token function">git</span> config <span class="token parameter variable">--global</span> https.proxy http://127.0.0.1:7890
<span class="token comment"># 其实上面设置了也没什么用,再清空一次代理</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--unset</span> https.proxy
<span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--unset</span> http.proxy
<span class="token comment"># 查看代理</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--get</span> http.proxy
<span class="token comment"># 再刷新dns，结束</span>
ipconfig /flushdns
<span class="token comment"># 拉取或推送</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,64),c=[t];function l(p,o){return a(),s("div",null,c)}const d=n(i,[["render",l],["__file","git.html.vue"]]);export{d as default};
